pragma solidity ^0.6.0;

import "https://github.com/smartcontractkit/chainlink/blob/master/evm-contracts/src/v0.6/ChainlinkClient.sol";
import "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol";
import "https://github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC20/Burnable.sol";

// SaffronCoin is a ERC-20 compliant token
contract SaffronCoin is ChainlinkClient, SafeERC20, Burnable {
  // Set the name, symbol, and decimals for the token
  string public name = "Saffron Coin";
  string public symbol = "SAF";
  uint8 public decimals = 18;

  // Set the Chainlink Database address and the SaffronCoin price and real-world supply feed
  bytes32 public oracleAddress;
  bytes32 public priceFeed;
  bytes32 public realworldSupplyFeed;

  // The SaffronCoin contract needs to keep track of the total supply and
  // the balance of each account
  uint256 public totalSupply;
  mapping (address => uint256) public balanceOf;

  // The contract needs to know who the owner is
  address public owner;

  // The contract needs to know who the minters are
  mapping (address => bool) public minters;

  // Set the contract's owner to the creator of the contract
  constructor() public {
    owner = msg.sender;
  }

  // Only the owner can set the Chainlink Database address and the SaffronCoin price and real-world supply feed
  function setOracle(bytes32 _oracleAddress, bytes32 _priceFeed, bytes32 _realworldSupplyFeed) public {
    require(msg.sender == owner, "Only the owner can set the oracle address and price and real-world supply feed.");
    oracleAddress = _oracleAddress;
    priceFeed = _priceFeed;
    realworldSupplyFeed = _realworldSupplyFeed;
  }

  // Only the owner can add or remove minters
  function setMinter(address _minter, bool _status) public {
    require(msg.sender == owner, "Only the owner can add or remove minters.");
    minters[_minter] = _status;
  }

  // The mint function is used to create new SaffronCoins and add them to the total supply
  function mint(uint256 _value) public {
    // Make sure the caller is a minter
    require(minters[msg.sender], "Only minters can mint SaffronCoins.");

    // Make sure the price and real-world supply feed are set
    require(oracleAddress != address(0) && priceFeed != bytes32(0) && realworldSupplyFeed != bytes32(0), "The oracle address and price and real-world supply feed must be set before minting.");

   
